# Script para testar a vers√£o corrigida do DIMEX
Write-Host "üß™ Testando vers√£o corrigida do DIMEX..." -ForegroundColor Green

# Remove arquivos anteriores
if (Test-Path "logs/mxOUT.txt") { Remove-Item "logs/mxOUT.txt" -Force -ErrorAction SilentlyContinue }
if (Test-Path "logs/terminal_0.log") { Remove-Item "logs/terminal_0.log" -Force -ErrorAction SilentlyContinue }
if (Test-Path "logs/terminal_1.log") { Remove-Item "logs/terminal_1.log" -Force -ErrorAction SilentlyContinue }
if (Test-Path "logs/terminal_2.log") { Remove-Item "logs/terminal_2.log" -Force -ErrorAction SilentlyContinue }

Write-Host "üìÅ Arquivos anteriores removidos" -ForegroundColor Cyan

# Compila o projeto
Write-Host "üî® Compilando projeto..." -ForegroundColor Yellow
go build -o dimex_test.exe useDIMEX-f.go

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erro na compila√ß√£o!" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Compila√ß√£o bem-sucedida!" -ForegroundColor Green

# Inicia os 3 processos
Write-Host "üöÄ Iniciando 3 processos DIMEX..." -ForegroundColor Green

$process0 = Start-Process -FilePath ".\dimex_test.exe" -ArgumentList "0", "127.0.0.1:5000", "127.0.0.1:6001", "127.0.0.1:7002" -WindowStyle Normal -PassThru
$process1 = Start-Process -FilePath ".\dimex_test.exe" -ArgumentList "1", "127.0.0.1:5000", "127.0.0.1:6001", "127.0.0.1:7002" -WindowStyle Normal -PassThru
$process2 = Start-Process -FilePath ".\dimex_test.exe" -ArgumentList "2", "127.0.0.1:5000", "127.0.0.1:6001", "127.0.0.1:7002" -WindowStyle Normal -PassThru

Write-Host "‚è≥ Aguardando 10 segundos para execu√ß√£o..." -ForegroundColor Yellow
Start-Sleep 10

# Verifica se os processos ainda est√£o rodando
$p0Running = Get-Process -Id $process0.Id -ErrorAction SilentlyContinue
$p1Running = Get-Process -Id $process1.Id -ErrorAction SilentlyContinue
$p2Running = Get-Process -Id $process2.Id -ErrorAction SilentlyContinue

Write-Host "üìä Status dos processos:" -ForegroundColor Cyan
Write-Host "  Processo 0: $($p0Running ? 'Rodando' : 'Parado')" -ForegroundColor $(if($p0Running) { 'Green' } else { 'Red' })
Write-Host "  Processo 1: $($p1Running ? 'Rodando' : 'Parado')" -ForegroundColor $(if($p1Running) { 'Green' } else { 'Red' })
Write-Host "  Processo 2: $($p2Running ? 'Rodando' : 'Parado')" -ForegroundColor $(if($p2Running) { 'Green' } else { 'Red' })

# Verifica o conte√∫do do mxOUT.txt
if (Test-Path "logs/mxOUT.txt") {
    $content = Get-Content "logs/mxOUT.txt" -Raw
    $length = if ($content) { $content.Length } else { 0 }
    
    Write-Host "`nüìÑ Conte√∫do do mxOUT.txt:" -ForegroundColor Cyan
    Write-Host "  Tamanho: $length caracteres" -ForegroundColor Gray
    
    if ($content) {
        Write-Host "  Conte√∫do: $content" -ForegroundColor White
        Write-Host "  Padr√£o correto: $(if($content -match '^(\|\.)+$') { '‚úÖ SIM' } else { '‚ùå N√ÉO' })" -ForegroundColor $(if($content -match '^(\|\.)+$') { 'Green' } else { 'Red' })
    } else {
        Write-Host "  ‚ùå Arquivo vazio!" -ForegroundColor Red
    }
} else {
    Write-Host "`n‚ùå Arquivo mxOUT.txt n√£o encontrado!" -ForegroundColor Red
}

# Para os processos
Write-Host "`nüõë Parando processos..." -ForegroundColor Yellow
if ($p0Running) { Stop-Process -Id $process0.Id -Force -ErrorAction SilentlyContinue }
if ($p1Running) { Stop-Process -Id $process1.Id -Force -ErrorAction SilentlyContinue }
if ($p2Running) { Stop-Process -Id $process2.Id -Force -ErrorAction SilentlyContinue }

Write-Host "‚úÖ Teste conclu√≠do!" -ForegroundColor Green
